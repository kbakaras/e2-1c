Функция list(ЗапросСписка) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	
	Десериализатор = Обработки.e2Десериализатор.Создать().ИнициализироватьXDTO();
	Сериализатор   = Обработки.e2Сериализатор.Создать().ИнициализироватьXDTO();

	Ответ = Сериализатор.СоздатьОтветСписок();

	ИтЗапросыСсылки = Десериализатор.ИтераторЗапросыСсылки(ЗапросСписка);
	Пока Десериализатор.ИтераторСледующий(ИтЗапросыСсылки) Цикл
		Ссылка = Десериализатор.НайтиПолучить(ИтЗапросыСсылки.Элемент);
		Если Ссылка <> Неопределено Тогда
			Сериализатор.СериализоватьДляСписка(Ссылка,,, Истина);
		КонецЕсли;
	КонецЦикла;

	ИтЗапросыСущности = Десериализатор.ИтераторЗапросыСущности(ЗапросСписка);
	Пока Десериализатор.ИтераторСледующий(ИтЗапросыСущности) Цикл
		Выборка = Десериализатор.НайтиЭлементы(ИтЗапросыСущности.Элемент);
		Пока Выборка.Следующий() Цикл
			Сериализатор.СериализоватьДляСписка(Выборка.Ссылка,,, Истина);
		КонецЦикла;
	КонецЦикла;

	Сериализатор.Закрыть();
	Десериализатор.Закрыть();

	Возврат Ответ;
КонецФункции

Функция element(ЗапросЭлементов) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	
	Десериализатор = Обработки.e2Десериализатор.Создать().ИнициализироватьXDTO();
	Сериализатор   = Обработки.e2Сериализатор.Создать().ИнициализироватьXDTO();

	Ответ = Сериализатор.СоздатьОтветЭлементы();

	ИтЗапросыСсылки = Десериализатор.ИтераторЗапросыСсылки(ЗапросЭлементов);
	Пока Десериализатор.ИтераторСледующий(ИтЗапросыСсылки) Цикл
		Ссылка = Десериализатор.НайтиПолучить(ИтЗапросыСсылки.Элемент);
		Если Ссылка <> Неопределено Тогда
			Сериализатор.Сериализовать(Ссылка,,, Истина);
		КонецЕсли;
	КонецЦикла;

	ИтЗапросыСущности = Десериализатор.ИтераторЗапросыСущности(ЗапросЭлементов);
	Пока Десериализатор.ИтераторСледующий(ИтЗапросыСущности) Цикл
		Выборка = Десериализатор.НайтиЭлементы(ИтЗапросыСущности.Элемент);
		Пока Выборка.Следующий() Цикл
			Сериализатор.Сериализовать(Выборка.Ссылка,,, Истина);
		КонецЦикла;
	КонецЦикла;

	Сериализатор.Закрыть();
	Десериализатор.Закрыть();

	Возврат Ответ;
КонецФункции

Функция update(updateRequest) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	
	Десериализатор = Обработки.e2Десериализатор.Создать().ИнициализироватьXDTO();
	Десериализатор.ДесериализоватьИзмененные(updateRequest);
	Десериализатор.Закрыть();
КонецФункции

Функция repeat(repeatRequest)
	УстановитьПривилегированныйРежим(Истина);
	
	Узел = ПланыОбмена.e2.НайтиПоКоду("e2");
	
	Десериализатор = Обработки.e2Десериализатор.Создать().ИнициализироватьXDTO();
	ОсобыеСущности = Обработки.e2ОсобыеСущности.Создать();
	
	ИтСущности = Десериализатор.ИтераторСущности(repeatRequest);
	Пока Десериализатор.ИтераторСледующий(ИтСущности) Цикл
		ТипСущности = ОсобыеСущности.ТипСущности(ИтСущности.Элемент.ИмяСущности);
		Тип = ТипСущности.Тип;
		Вид = ТипСущности.Вид;
		
		ИтЭлементы = Десериализатор.ИтераторЭлементыИзмененные(ИтСущности.Элемент);
		Пока Десериализатор.ИтераторСледующий(ИтЭлементы) Цикл
			ЭлЭлемент = ИтЭлементы.Элемент;
			
			Ссылка = Неопределено;
			Если Тип = "Справочники" Тогда
				Ссылка = Справочники[Вид].ПолучитьСсылку(Новый УникальныйИдентификатор(ЭлЭлемент.УидЭлемента));
			ИначеЕсли Тип = "Документы" Тогда
				Ссылка = Документы[Вид].ПолучитьСсылку(Новый УникальныйИдентификатор(ЭлЭлемент.УидЭлемента));
			КонецЕсли;

			Если Ссылка <> Неопределено Тогда
				ПланыОбмена.ЗарегистрироватьИзменения(Узел, Ссылка);
				Сообщить("Зарегистрирован объект " + Ссылка, СтатусСообщения.Обычное);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Десериализатор.Закрыть();
КонецФункции